#include <bits/stdc++.h>
using namespace std;

class Solution {
public:
    int minimumSwaps(vector<int>& arr) {
        int n = arr.size();
        int swaps = 0;

        // Create a vector of pairs {value, original index}
        vector<pair<int, int>> vec(n);
        for (int i = 0; i < n; i++) {
            vec[i] = {arr[i], i};
        }

      
        sort(vec.begin(), vec.end());

        
        vector<bool> visited(n, false);

        
        for (int i = 0; i < n; i++) {
            
            if (visited[i] || vec[i].second == i)
                continue;

            int cycleSize = 0;
            int j = i;

           
            while (!visited[j]) {
                visited[j] = true;
                j = vec[j].second;
                cycleSize++;
            }

            
            if (cycleSize > 1)
                swaps += (cycleSize - 1);
        }

        return swaps;
    }
};

int main() {
    vector<int> arr = {4, 3, 1, 2};
    cout << Solution().minimumSwaps(arr) << endl; // Output: 3
    return 0;
}
